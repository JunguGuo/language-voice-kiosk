import { API_BASE } from "./env";

export const USE_MOCKS = (import.meta.env.VITE_USE_MOCKS === "1" || String(import.meta.env.VITE_USE_MOCKS).toLowerCase() === "true");

// a tiny WAV beep base64 to slice into "streamed" chunks for mock mode
const BEEP = "";
function beepChunk(): ArrayBuffer {
  const bin = atob(BEEP);
  const bytes = new Uint8Array(bin.length);
  for (let i=0;i<bin.length;i++) bytes[i] = bin.charCodeAt(i);
  return bytes.buffer;
}

export async function* mockSynthesisStream(): AsyncIterable<ArrayBuffer> {
  for (let i=0;i<10;i++) {
    await new Promise(r => setTimeout(r, i ? 120 : 0));
    yield beepChunk();
  }
}

export async function* realSynthesisStream(payload: { text: string; languageCode: string; voiceId: string; }): AsyncIterable<ArrayBuffer> {
  const res = await fetch(`${API_BASE}/api/synthesize/stream`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload)
  });
  if (!res.ok || !res.body) throw new Error("Stream failed");
  const reader = res.body.getReader();
  while (true) {
    const { done, value } = await reader.read();
    if (done) break;
    yield value.buffer;
  }
}